Problem 1:
Let's compare some basic math functions to refresh our memory. For each of the following, just write which function is asymptotically greater (So, you should be thinking about your asymptotic notations!). Show your reasoning for the same.

10000000000n2 vs n3^ bc higher power
n2 log(n) vs n(log(n))10 n^2 is higher than log
nlogn vs 2^sqrtn secdond bc higher power
 
2n vs 22n 2n has the higher derivative
Problem 2:
Now let's examine some [pseudo]code and apply asymptotic notation to it. 

isPrime(n): 
  for(i = 2, i*i <= n; i++) {
    if(n % i == 0) {
      return false
    }
  return true

What is the 

Best Case O(1)
Worst Case O (n)
Average Case O(n) basically becuase it only loops n times and can loop once for the condition of n matching up with 3, and worst case of O(n)
Time complexity for the above function? O(n)
